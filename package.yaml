name: qmuli
version: "0.5.0"
synopsis: EDSL for building infrastructure on AWS
description: EDSL for building infrastructure on AWS
category: AWS, Cloud
maintainer: Alex Babkin
stability: experimental
license: MIT
license-file: LICENSE.md

github: qmuli/qmuli

ghc-options:
  - -O0                                 # Turn on aggressive optimizations
  - -fwarn-tabs                         # Warn on tabs (spaces are better)
  - -Wall                               # Turn on most warnings
  - -Wcpp-undef                         # Warn on undefined CPP expressions
  - -Widentities                        # Warn when converting between integers
                                        # without changing the type (i.e. noops)
  - -Wincomplete-record-updates         # Warn for partial record updates
  - -Wincomplete-uni-patterns           # Warn for incomplete pattern matching
  - -Wno-unused-do-bind                 # Allow single-line do blocks
  - -Wno-deprecations                   # Allow some deprecated functions
                                        # TODO(matthew-piziak): make this file specific
  - -Wno-monomorphism-restriction       # Disables this "dreaded" restriction
  - -Wno-unticked-promoted-constructors # Allow unticked promoted constructors
  - -Wpartial-fields                    # Warn for records that could trigger
                                        # -Wincomplete-record-updates
  - -Wredundant-constraints             # Warn on redundant typeclass constraints
  - -optP=-Wno-nonportable-include-path # macOS compatibility
    
extra-source-files:
  - CHANGELOG.md
  - README.md
  - stack.yaml
  - tests/json/**/*
  - js/*

default-extensions:
  - NoImplicitPrelude
  - OverloadedStrings
  - NamedFieldPuns
  - TupleSections
  - FlexibleInstances
  - FlexibleContexts
  - ScopedTypeVariables
  - MultiParamTypeClasses
  - MonoLocalBinds
    
dependencies:
  - aeson
  - aeson-pretty
  - ansi-terminal
  - base
  - binary
  - bytestring
  - conduit
  - conduit-extra
  - containers
  - data-default
  - data-default-class
  - directory
  - either
  - exceptions
  - executable-path
  - extra
  - freer-simple 
  - hashable
  - unordered-containers
  - heredoc
  - http-client
  - http-client-tls
  - lens
  - lens-aeson
  - mtl
  - optparse-applicative
  - process
  - protolude
  - req
  - resourcet
  - safe
  - servant-client
  - stm
  - stratosphere
  - system-extra
  - text
  - time
  - transformers
  - transformers-base
  - turtle
  - unix
  - unordered-containers
  - yaml


library:
  source-dirs:
    - library

  exposed-modules:
    - Qi
    - Qi.AWS.CF
    - Qi.AWS.Cognito
    - Qi.AWS.Lex
    - Qi.AWS.Types
    - Qi.CLI.Dispatcher
    - Qi.Config.AWS
    - Qi.Config.AWS.ApiGw
    - Qi.Config.AWS.ApiGw.ApiMethod.Profile
    - Qi.Config.AWS.CfCustomResource.Types
    - Qi.Config.AWS.CF
    - Qi.Config.AWS.CW
    - Qi.Config.AWS.DDB
    - Qi.Config.AWS.Lambda
    - Qi.Config.AWS.S3
    - Qi.Config.CfTemplate
    - Qi.Config.Identifier
    - Qi.Core.Curry
    - Qi.CustomResource.Cognito
    - Qi.CustomResource.Lex
    - Qi.Options
    - Qi.Program.Config.Lang
    - Qi.Program.Config.Ipret.State
    - Qi.Program.CF.Ipret.Gen
    - Qi.Program.CF.Lang
    - Qi.Program.Gen.Lang
    - Qi.Program.Lambda.Ipret.Gen
    - Qi.Program.Lambda.Lang
    - Qi.Program.S3.Lang
    - Qi.Program.S3.Ipret.Gen
    - Qi.Program.Wiring.IO
    - Qi.Util
    - Qi.Util.ApiGw
    - Qi.Util.DDB
    - Qi.Program.Gen.Ipret.IO
    - Qi.Config.AWS.S3.Accessors
      
  dependencies:
    #- amazonka-s3-streaming
    - amazonka
    - amazonka-cloudformation
    - amazonka-cloudwatch-logs
    - amazonka-cognito-identity
    - amazonka-cognito-idp
    - amazonka-core
    - amazonka-dynamodb
    - amazonka-iam
    - amazonka-lambda
    # - amazonka-lex-models
    - amazonka-s3
    - amazonka-sqs
    - zip


flags:
  build-examples:
    description: "Build examples"
    default: true
    manual: true


executables:
  qmuli-simple-s3-copy:
    main: Main.hs
    source-dirs: examples/simple-s3-copy/src
    dependencies:
      - base
      - qmuli
    when:
    - condition: flag(build-examples)
      then:
        buildable: true
      else:
        buildable: false

#  qmuli-fold-s3-content:
#    main: Main.hs
#    source-dirs: examples/fold-s3-content/src
#    dependencies:
#      - base
#      - qmuli
#    when:
#    - condition: flag(build-examples)
#      then:
#        buildable: true
#      else:
#        buildable: false


  # qmuli-stream-s3-objects:
    # main: Main.hs
    # source-dirs: examples/stream-s3-objects/src
    # dependencies:
      # - base >= 4.8 && < 5
      # - qmuli
  # qmuli-apigw-lambda-s3:
    # main: Main.hs
    # source-dirs: examples/apigw-lambda-s3/src
    # dependencies:
      # - base >= 4.8 && < 5
      # - qmuli
  # qmuli-apigw-lambda-dynamodb:
    # main: Main.hs
    # source-dirs: examples/apigw-lambda-dynamodb/src
    # dependencies:
      # - base >= 4.8 && < 5
      # - qmuli
  # qmuli-dynamodb-stream:
    # main: Main.hs
    # source-dirs: examples/dynamodb-stream/src
    # dependencies:
      # - base >= 4.8 && < 5
      # - qmuli
  # qmuli-cognito-apigw-lambda:
    # main: Main.hs
    # source-dirs: examples/cognito-apigw-lambda/src
    # dependencies:
      # - base >= 4.8 && < 5
      # - qmuli
  # qmuli-cognito-lambda:
    # main: Main.hs
    # source-dirs: examples/cognito-lambda/src
    # dependencies:
      # - base >= 4.8 && < 5
      # - qmuli

  # qmuli-cognito-apigw-lambda:
    # main: Main.hs
    # source-dirs: examples/cognito-apigw-lambda/src
    # dependencies:
      # - base
      # - qmuli
    # when:
    # - condition: flag(build-examples)
      # then:
        # buildable: true
      # else:
        # buildable: false

  # qmuli-cw-events:
    # main: Main.hs
    # source-dirs: examples/cw-events/src
    # dependencies:
      # - base
      # - qmuli
    # when:
    # - condition: flag(build-examples)
      # then:
        # buildable: true
      # else:
        # buildable: false

tests:
  tasty:
    main: Main.hs
    source-dirs:
      - tests
    dependencies:
      - amazonka-cloudformation
      - amazonka-core
      - file-embed
      - hspec
      - qmuli
      - random-string
      - tasty
      - tasty-hspec
      - text
      - unordered-containers
      
